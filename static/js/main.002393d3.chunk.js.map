{"version":3,"sources":["assets/icons/light-mode.png","assets/icons/moon-dark.svg","context/ThemeContext.tsx","components/Header.tsx","components/Main.tsx","assets/icons/back-arrow-dark.svg","assets/icons/back-arrow.svg","components/CountryInfo.tsx","App.tsx","index.tsx"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","theme","setTheme","Provider","value","toggleDarkMode","Header","useContext","className","onClick","src","darkMode","alt","lightMode","Main","userInput","setUserInput","userSelect","setUserSelect","currentCountry","setCurrentCountry","covidData","setCovidData","userSelectedCountry","setUserSelectedCountry","useEffect","axios","get","then","res","data","name","catch","error","console","params","country","headers","type","placeholder","onChange","e","target","id","map","index","x","to","pathname","state","flag","population","toString","replace","region","capital","CountryInfo","props","log","location","nativeName","subregion","currencies","languages","borders","response","cases","deaths","window","scrollTo","numberWithCommas","numberToConvert","href","backArrowLight","backArrow","code","length","language","border","new","active","recovered","total","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.002393d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/light-mode.e084c732.png\";","export default __webpack_public_path__ + \"static/media/moon-dark.b7ecf3de.svg\";","import React, { useState, createContext } from 'react';\n\nexport interface ThemeContextProps {\n   theme: string,\n   toggleDarkMode: (theme: any) => void\n}\n\nexport const ThemeContext = createContext({} as ThemeContextProps);\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n   const [theme, setTheme] = useState('');\n\n   const toggleDarkMode = (theme: any) => {\n      setTheme(theme);\n   }\n\n   return (\n      <ThemeContext.Provider value={{ theme, toggleDarkMode }}>\n         {children}\n      </ThemeContext.Provider>\n   );\n}","import lightMode from '../assets/icons/light-mode.png';\nimport darkMode from '../assets/icons/moon-dark.svg';\nimport { ThemeContext } from '../context/ThemeContext'\nimport { useContext } from 'react';\n\nconst Header = () => {\n   const theme = useContext(ThemeContext);\n   return (\n      <div className={\n         theme.theme === 'light'\n            ? 'header header--light'\n            : 'header'\n      }>\n         <h5 className=\"header__logo\">\n            Where in the World?\n         </h5>\n         {\n            theme.theme === 'dark'\n               ? <button\n                  className=\"header__dark-mode-button\"\n                  onClick={() => theme.toggleDarkMode('light')}>\n                  <img src={darkMode} alt=\"dark mode active icon\" className=\"header__dark-mode-icon\" /> Dark Mode\n               </button>\n               : <button\n                  className=\"header__dark-mode-button header__dark-mode-button--light\"\n                  onClick={() => theme.toggleDarkMode('dark')}>\n                  <img src={lightMode} alt=\"light mode active icon\" className=\"header__dark-mode-icon\" /> Light Mode\n               </button>\n         }\n      </div>\n   )\n}\n\nexport default Header\n","import { Link } from 'react-router-dom';\nimport { ThemeContext } from '../context/ThemeContext';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Main = () => {\n   const theme = useContext(ThemeContext);\n   const [userInput, setUserInput] = useState('');\n   const [userSelect, setUserSelect] = useState('');\n   const [currentCountry, setCurrentCountry] = useState<any[]>([]);\n   const [covidData, setCovidData] = useState<any[]>([]);\n   const [userSelectedCountry, setUserSelectedCountry] = useState('');\n\n   useEffect(() => {\n      axios\n         .get(\n            userInput\n               ? `https://restcountries.eu/rest/v2/name/${userInput}`\n               : 'https://restcountries.eu/rest/v2/all'\n         )\n         .then(res => {\n            setCurrentCountry(res.data);\n            setUserSelectedCountry(currentCountry[0].name)\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   }, [userInput, currentCountry])\n\n   useEffect(() => {\n      axios\n         .get(\n            userSelect\n               ? `https://restcountries.eu/rest/v2/region/${userSelect}`\n               : 'https://restcountries.eu/rest/v2/all'\n         )\n         .then(res => {\n            setCurrentCountry(res.data);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   }, [userSelect])\n\n   useEffect(() => {\n      axios\n         .get('https://covid-193.p.rapidapi.com/statistics', {\n            params: {\n               country: `${userSelectedCountry}`\n            },\n            headers: {\n               'x-rapidapi-key': '3818ad22a4msh5ab33bee728bfc6p144e31jsn8f038c1a2731',\n               'x-rapidapi-host': 'covid-193.p.rapidapi.com'\n            }\n         })\n         .then(res => {\n            setCovidData(res.data)\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   }, [userInput, userSelectedCountry])\n\n   const handleUserInput = (e: any) => {\n      setUserInput(e.target.value);\n   }\n\n   const handleUserSelect = (e: any) => {\n      setUserSelect(e.target.value);\n   }\n\n   // const clearState = () => {\n   //    setUserInput('');\n   //    setUserSelect('');\n   //    setCurrentCountry([]);\n   //    setCovidData([]);\n   //    setUserSelectedCountry('');\n   // }\n\n   return (\n      <div className={theme.theme === 'light' ? 'main main--light' : 'main'}>\n         <div className=\"main__search-select-wrapper\">\n            <section className=\"search\">\n               <input\n                  type=\"text\"\n                  className={theme.theme === 'light' ? 'search__input--light search__input' : 'search__input'}\n                  placeholder=\"Search for a country...\"\n                  onChange={handleUserInput}\n               />\n            </section>\n            <section className=\"drop-down\">\n               <select name=\"select\" id=\"select-country\"\n                  className={\n                     theme.theme === 'light'\n                        ? 'drop-down__select drop-down__select--light'\n                        : 'drop-down__select'\n                  }\n                  onChange={handleUserSelect}>\n                  <option value=\"default\">Filter By Region</option>\n                  <option value=\"Africa\">Africa</option>\n                  <option value=\"Americas\">Americas</option>\n                  <option value=\"Asia\">Asia</option>\n                  <option value=\"Europe\">Europe</option>\n                  <option value=\"Oceania\">Oceania</option>\n               </select>\n            </section>\n         </div>\n         <section className={\n            theme.theme === 'light'\n               ? \"card-wrapper card-wrapper--light\"\n               : \"card-wrapper\"\n         }\n         >\n            {\n               currentCountry.map((country, index) => {\n                  let numberWithCommas = (x: number) => {\n                     return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                  }\n\n                  return (\n                     <Link to={{ pathname: \"/country-info\", state: { country, covidData } }} key={index}>\n                        <div className={\n                           theme.theme === 'light'\n                              ? \"card-wrapper__card card-wrapper__card--light\"\n                              : \"card-wrapper__card\"\n                        }\n                        >\n                           <div className=\"card-wrapper__img\">\n                              <img src={country.flag} alt={`${country.name} + flag`} className=\"card-wrapper__flag\" />\n                           </div>\n                           <div className=\"card-wrapper__content\">\n                              <h2 className=\"card-wrapper__country-name\">\n                                 {country.name}\n                              </h2>\n                              <p className=\"card-wrapper__info\">\n                                 <span className=\"card-wrapper__bold\">Population:</span>\n                                 {numberWithCommas(country.population)}\n                              </p>\n                              <p className=\"card-wrapper__info\">\n                                 <span className=\"card-wrapper__bold\">Region:</span>\n                                 {country.region}\n                              </p>\n                              <p className=\"card-wrapper__info\">\n                                 <span className=\"card-wrapper__bold\">Capital:</span>\n                                 {country.capital}\n                              </p>\n                           </div>\n                        </div>\n                     </Link>\n                  )\n               })\n            }\n         </section>\n      </div>\n   )\n}\n\nexport default Main\n","export default __webpack_public_path__ + \"static/media/back-arrow-dark.e4ffc175.svg\";","export default __webpack_public_path__ + \"static/media/back-arrow.c7597fb1.svg\";","import { ThemeContext } from '../context/ThemeContext';\nimport { useContext, useEffect } from 'react';\nimport backArrow from '../assets/icons/back-arrow-dark.svg';\nimport backArrowLight from '../assets/icons/back-arrow.svg'\n\nconst CountryInfo = (props: any) => {\n   console.log(props.location.state)\n   const { flag, name, nativeName, population, region, subregion, capital, currencies, languages, borders } = props.location.state.country;\n   const { cases, deaths } = props.location.state.covidData.response[0];\n   console.log(props.location.state.covidData.response[0]);\n\n   console.log(props)\n\n   useEffect(() => {\n      window.scrollTo(0, 0);\n   }, []);\n\n   const theme = useContext(ThemeContext);\n\n   const numberWithCommas = (numberToConvert: number) => {\n      return numberToConvert.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n   }\n\n   return (\n      <section className={theme.theme === 'light' ? 'country country--light' : 'country'}>\n         <a href=\"/\" className={\n            theme.theme === 'light'\n               ? 'country__back-button country__back-button--light'\n               : 'country__back-button'\n         }>\n            {\n               theme.theme === 'light'\n                  ? <img src={backArrowLight} alt=\"back arrow\" className=\"country__back-arrow\" />\n                  : <img src={backArrow} alt=\"back arrow\" className=\"country__back-arrow\" />\n            } Back\n            </a>\n         <div className=\"country__desktop-wrapper\">\n            <div className=\"country__flag\">\n               <img src={flag} alt=\"country flag\" className=\"country__img\" />\n            </div>\n            <div className={\n               theme.theme === 'light'\n                  ? 'country__info country__info--light'\n                  : 'country__info'\n            }>\n               <div className=\"country__tablet-wrapper\">\n                  <h1 className=\"country__name\">\n                     {name}\n                  </h1>\n                  <div className=\"country__info-container\">\n                     <div className=\"country__left-side\">\n                        <p className=\"country__label\">\n                           <span className=\"country__label-bold\">Native Name:</span> {nativeName}\n                        </p>\n                        <p className=\"country__label\">\n                           <span className=\"country__label-bold\">Population:</span> {numberWithCommas(population)}\n                        </p>\n                        <p className=\"country__label\">\n                           <span className=\"country__label-bold\">Region:</span> {region}\n                        </p>\n                        <p className=\"country__label\">\n                           <span className=\"country__label-bold\">Sub Region:</span> {\n                              subregion\n                                 ? subregion\n                                 : 'None. Guess this place is too small.'\n                           }\n                        </p>\n                        <p className=\"country__label\">\n                           <span className=\"country__label-bold\">Capital:</span> {\n                              capital\n                                 ? capital\n                                 : 'None, for some reason...'\n                           }\n                        </p>\n                        <p className=\"country__label\">\n                           <span className=\"country__label-bold\">Currency:</span> {currencies[0].code}, {currencies[0].name}\n                        </p>\n                        <div className=\"country__label\">\n                           <span className=\"country__label-bold\">Languages:</span>\n                           {\n                              languages.length > 1\n                                 ? languages.map((language: any, index: number) => {\n                                    return (\n                                       <div className=\"country__languages-wrapper\" key={index}>\n                                          <p>\n                                             {(index ? ', ' : '') + language.name}\n                                          </p>\n                                       </div>\n                                    )\n                                 })\n                                 : 'No languages reported...'\n                           }\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"country__border-wrapper\">\n                     <h1 className=\"country__border-heading\">\n                        Border Countries:\n               </h1>\n                     <div className=\"country__border-country-wrapper\">\n                        {\n                           borders.length >= 1\n                              ? borders.map((border: any, index: number) => {\n                                 return (\n                                    <p className=\"country__border\" key={index}>\n                                       {(index ? ', ' : '') + border}\n                                    </p>\n                                 )\n                              })\n                              : <p className=\"country__border\">None, it's an island. Duh. 🏝</p>\n                        }\n                     </div>\n                  </div>\n               </div>\n               <div className=\"country__covid-data-wrapper\">\n                  <h1 className=\"country__covid-header\">\n                     Covid Data\n               </h1>\n                  <p className=\"country__label\">\n                     <span className=\"country__label-bold\">New Cases:</span>\n                     {numberWithCommas(cases.new)}\n                  </p>\n                  <p className=\"country__label\">\n                     <span className=\"country__label-bold\">Active Cases:</span>\n                     {numberWithCommas(cases.active)}\n                  </p>\n                  <p className=\"country__label\">\n                     <span className=\"country__label-bold\">Recovered:</span>\n                     {numberWithCommas(cases.recovered)}\n                  </p>\n                  <p className=\"country__label\">\n                     <span className=\"country__label-bold\">Total Cases:</span>\n                     {numberWithCommas(cases.total)}\n                  </p>\n                  <p className=\"country__label\">\n                     <span className=\"country__label-bold\">New Deaths:</span>\n                     {numberWithCommas(deaths.new)}\n                  </p>\n                  <p className=\"country__label\">\n                     <span className=\"country__label-bold\">Total Deaths:</span>\n                     {numberWithCommas(deaths.total)}\n                  </p>\n               </div>\n            </div>\n         </div>\n      </section>\n   )\n}\n\nexport default CountryInfo\n","import './styles/main.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport CountryInfo from './components/CountryInfo';\nimport { ThemeProvider } from './context/ThemeContext';\n\nfunction App() {\n   return (\n      <Router basename={process.env.PUBLIC_URL}>\n         <ThemeProvider>\n            <div className=\"app\">\n               <Header />\n               <Route exact path=\"/\" component={Main} />\n               <Route exact path=\"/country-info\" component={CountryInfo} />\n               {/* <Main /> */}\n            </div>\n         </ThemeProvider>\n      </Router>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}