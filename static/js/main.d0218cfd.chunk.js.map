{"version":3,"sources":["context/ThemeContext.tsx","components/Header.tsx","components/Main.tsx","assets/icons/back-arrow-dark.svg","assets/icons/back-arrow.svg","components/CountryInfo.tsx","App.tsx","index.tsx"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","theme","setTheme","Provider","value","toggleDarkMode","Header","useContext","className","Main","userInput","setUserInput","userSelect","setUserSelect","currentCountry","setCurrentCountry","useEffect","axios","get","then","res","data","catch","error","console","type","color","height","width","placeholder","onChange","e","target","name","id","log","map","country","index","to","toLowerCase","src","flag","alt","population","toLocaleString","region","capital","CountryInfo","covidData","setCovidData","useLocation","pathname","split","pop","params","headers","response","length","window","scrollTo","undefined","href","backArrowLight","backArrow","nativeName","subregion","currencies","code","languages","language","style","display","cases","new","active","recovered","total","deaths","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0218cfd.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\n\nexport interface ThemeContextProps {\n   theme: string,\n   toggleDarkMode: (theme: any) => void\n}\n\nexport const ThemeContext = createContext({} as ThemeContextProps);\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n   const [theme, setTheme] = useState('dark');\n\n   const toggleDarkMode = (theme: any) => {\n      setTheme(theme);\n   }\n\n   return (\n      <ThemeContext.Provider value={{ theme, toggleDarkMode }}>\n         {children}\n      </ThemeContext.Provider>\n   );\n}","import { ThemeContext } from '../context/ThemeContext'\nimport { useContext } from 'react';\n\nconst Header = () => {\n   const theme = useContext(ThemeContext);\n   return (\n      <div className={\n         theme.theme === 'light'\n            ? 'header header--light'\n            : 'header'\n      }>\n         <h5 className=\"header__logo\">\n            Where in the World?\n         </h5>\n         <h5>\n            Made with ❤️ By Marley A.\n         </h5>\n         {/* {\n            theme.theme === 'dark'\n               ? <button\n                  className=\"header__dark-mode-button\"\n                  onClick={() => theme.toggleDarkMode('light')}>\n                  <img src={darkMode} alt=\"dark mode active icon\" className=\"header__dark-mode-icon\" /> Dark Mode\n               </button>\n               : <button\n                  className=\"header__dark-mode-button header__dark-mode-button--light\"\n                  onClick={() => theme.toggleDarkMode('dark')}>\n                  <img src={lightMode} alt=\"light mode active icon\" className=\"header__dark-mode-icon\" /> Light Mode\n               </button>\n         } */}\n      </div>\n   )\n}\n\nexport default Header\n","import { Link } from 'react-router-dom';\nimport { ThemeContext } from '../context/ThemeContext';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\n\nconst Main = () => {\n   const theme = useContext(ThemeContext);\n   const [userInput, setUserInput] = useState('');\n   const [userSelect, setUserSelect] = useState('');\n   const [currentCountry, setCurrentCountry] = useState<any[]>([]);\n\n\n   // ! get countries by name\n   useEffect(() => {\n      axios\n         .get(\n            userInput\n               ? `https://restcountries.eu/rest/v2/name/${userInput}`\n               : 'https://restcountries.eu/rest/v2/all'\n         )\n         .then(res => {\n            setCurrentCountry(res.data);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   }, [userInput])\n\n\n   // ! get countries by region\n   useEffect(() => {\n      axios\n         .get(\n            userSelect\n               ? `https://restcountries.eu/rest/v2/region/${userSelect}`\n               : 'https://restcountries.eu/rest/v2/all'\n         )\n         .then(res => {\n            setCurrentCountry(res.data);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   }, [userSelect])\n\n\n   const handleUserInput = (e: any) => {\n      setUserInput(e.target.value);\n   }\n\n   const handleUserSelect = (e: any) => {\n      setUserSelect(e.target.value);\n      console.log('user select')\n   }\n\n   return (\n      currentCountry === null\n         ? <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />\n         : <div className={theme.theme === 'light' ? 'main main--light' : 'main'}>\n            <div className=\"main__search-select-wrapper\">\n               <section className=\"search\">\n                  <input\n                     type=\"text\"\n                     className={theme.theme === 'light' ? 'search__input--light search__input' : 'search__input'}\n                     placeholder=\"Search for a country...\"\n                     onChange={handleUserInput}\n                  />\n               </section>\n               <section className=\"drop-down\">\n                  <select name=\"select\" id=\"select-country\"\n                     className={\n                        theme.theme === 'light'\n                           ? 'drop-down__select drop-down__select--light'\n                           : 'drop-down__select'\n                     }\n                     onChange={handleUserSelect}>\n                     <option value=\"default\">Filter By Region</option>\n                     <option value=\"Africa\">Africa</option>\n                     <option value=\"Americas\">Americas</option>\n                     <option value=\"Asia\">Asia</option>\n                     <option value=\"Europe\">Europe</option>\n                     <option value=\"Oceania\">Oceania</option>\n                  </select>\n               </section>\n            </div>\n            <section className={\n               theme.theme === 'light'\n                  ? \"card-wrapper card-wrapper--light\"\n                  : \"card-wrapper\"\n            }\n            >\n               {\n                  currentCountry.map((country: any, index: number) => {\n                     return (\n                        <Link\n                           to={`/${country.name.toLowerCase()}`}\n                           key={index}>\n                           <div className={\n                              theme.theme === 'light'\n                                 ? \"card-wrapper__card card-wrapper__card--light\"\n                                 : \"card-wrapper__card\"\n                           }\n                           >\n                              <div className=\"card-wrapper__img\">\n                                 <img src={country.flag} alt={`${country.name} + flag`} className=\"card-wrapper__flag\" />\n                              </div>\n                              <div className=\"card-wrapper__content\">\n                                 <h2 className=\"card-wrapper__country-name\">\n                                    {country.name}\n                                 </h2>\n                                 <p className=\"card-wrapper__info\">\n                                    <span className=\"card-wrapper__bold\">Population:</span>\n                                    {country.population.toLocaleString()}\n                                 </p>\n                                 <p className=\"card-wrapper__info\">\n                                    <span className=\"card-wrapper__bold\">Region:</span>\n                                    {country.region}\n                                 </p>\n                                 <p className=\"card-wrapper__info\">\n                                    <span className=\"card-wrapper__bold\">Capital:</span>\n                                    {country.capital}\n                                 </p>\n                              </div>\n                           </div>\n                        </Link>\n                     )\n                  })\n               }\n            </section>\n         </div >\n   )\n}\n\nexport default Main\n","export default __webpack_public_path__ + \"static/media/back-arrow-dark.e4ffc175.svg\";","export default __webpack_public_path__ + \"static/media/back-arrow.c7597fb1.svg\";","import axios from 'axios';\nimport { ThemeContext } from '../context/ThemeContext';\nimport { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport backArrow from '../assets/icons/back-arrow-dark.svg';\nimport backArrowLight from '../assets/icons/back-arrow.svg';\n\nconst CountryInfo = () => {\n   const [currentCountry, setCurrentCountry] = useState<any[]>([]);\n   const [covidData, setCovidData] = useState<any[]>([]);\n\n   let country = useLocation().pathname.split('/').pop();\n\n   // ! get covid data \n   useEffect(() => {\n      axios\n         .get('https://covid-193.p.rapidapi.com/statistics', {\n            params: {\n               country: `${country}`\n            },\n            headers: {\n               'x-rapidapi-key': '3818ad22a4msh5ab33bee728bfc6p144e31jsn8f038c1a2731',\n               'x-rapidapi-host': 'covid-193.p.rapidapi.com'\n            }\n         })\n         .then(res => {\n            // res.data.response < 1\n            //    ? setCovidData([{ msg: 'This country has not reported any data...' }])\n            //    : setCovidData(res.data.response)\n            console.log(res.data.response)\n            setCovidData(res.data.response);\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   }, [country])\n\n\n   // ! get country specific data \n   useEffect(() => {\n      axios\n         .get(`https://restcountries.eu/rest/v2/name/${country}`)\n         .then(res => {\n            setCurrentCountry([res.data.length > 1 ? res.data[0] : res.data[0]])\n         })\n         .catch(error => {\n            console.error(error);\n         });\n   }, [country])\n\n\n\n   useEffect(() => {\n      window.scrollTo(0, 0);\n   }, []);\n\n\n\n   const theme = useContext(ThemeContext);\n\n   return (\n      currentCountry[0] === undefined\n         ? (\n            <section className=\"country__info-wrapper\">\n               <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />\n            </section>\n         )\n         : <section className=\"country__info-wrapper\">{\n            currentCountry.map((country, index) => {\n               return (\n                  <section className={theme.theme === 'light' ? 'country country--light' : 'country'} key={index}>\n                     <a\n                        href=\"/countries\"\n                        className={\n                           theme.theme === 'light'\n                              ? 'country__back-button country__back-button--light'\n                              : 'country__back-button'\n                        }\n                     >\n                        {\n                           theme.theme === 'light'\n                              ? <img src={backArrowLight} alt=\"back arrow\" className=\"country__back-arrow\" />\n                              : <img src={backArrow} alt=\"back arrow\" className=\"country__back-arrow\" />\n                        } Back\n                  </a>\n                     <div className=\"country__desktop-wrapper\">\n                        <div className=\"country__flag\">\n                           <img src={country.flag} alt=\"country flag\" className=\"country__img\" />\n                        </div>\n                        <div className={\n                           theme.theme === 'light'\n                              ? 'country__info country__info--light'\n                              : 'country__info'\n                        }>\n                           <div className=\"country__tablet-wrapper\">\n                              <h1 className=\"country__name\">\n                                 {country.name}\n                              </h1>\n                              <div className=\"country__info-container\">\n                                 <div className=\"country__left-side\">\n                                    <p className=\"country__label\">\n                                       <span className=\"country__label-bold\">Native Name:</span> {country.nativeName}\n                                    </p>\n                                    <p className=\"country__label\">\n                                       <span className=\"country__label-bold\">Population:</span> {country.population != null ? country.population.toLocaleString('en') : 'No Reported Poulation'}\n                                    </p>\n                                    <p className=\"country__label\">\n                                       <span className=\"country__label-bold\">Region:</span> {country.region}\n                                    </p>\n                                    <p className=\"country__label\">\n                                       <span className=\"country__label-bold\">Sub Region:</span> {\n                                          country.subregion\n                                             ? country.subregion\n                                             : 'None. Guess this place is too small.'\n                                       }\n                                    </p>\n                                    <p className=\"country__label\">\n                                       <span className=\"country__label-bold\">Capital:</span> {\n                                          country.capital\n                                             ? country.capital\n                                             : 'None, for some reason...'\n                                       }\n                                    </p>\n                                    <p className=\"country__label\">\n                                       <span className=\"country__label-bold\">Currency:</span> {country.currencies[0].code}, {country.currencies[0].name}\n                                    </p>\n                                    <div className=\"country__label\">\n                                       <span className=\"country__label-bold\">Languages:</span>\n                                       {\n                                          country.languages.length > 1\n                                             ? country.languages.map((language: any, index: number) => {\n                                                return (\n                                                   <div className=\"country__languages-wrapper\" key={index}>\n                                                      <p>\n                                                         {(index ? ', ' : '') + language.name}\n                                                      </p>\n                                                   </div>\n                                                )\n                                             })\n                                             : 'No languages reported...'\n                                       }\n                                    </div>\n                                 </div>\n                              </div>\n                           </div>\n                        </div>\n                        {\n                           covidData[0] === undefined\n                              ? (\n                                 <h1 style={{ display: 'none' }}>\n                                    Loading\n                                 </h1>\n                              )\n                              : (\n                                 <div className=\"covid-data-wrapper\">\n                                    {\n                                       covidData.map((covidData, index) => {\n                                          return (\n                                             <div className=\"country__covid-data-wrapper\" key={index}>\n                                                <h1 className=\"country__covid-header\">\n                                                   Covid Data\n                                                         </h1>\n                                                <p className=\"country__label\">\n                                                   <span className=\"country__label-bold\">New Cases:</span>\n                                                   {\n                                                      covidData.cases.new\n                                                         ? covidData.cases.new.toLocaleString()\n                                                         : 'No Newly Reported Cases'\n                                                   }\n                                                </p>\n                                                <p className=\"country__label\">\n                                                   <span className=\"country__label-bold\">Active Cases:</span>\n                                                   {covidData.cases.active.toLocaleString()}\n                                                </p>\n                                                <p className=\"country__label\">\n                                                   <span className=\"country__label-bold\">Recovered:</span>\n                                                   {covidData.cases.recovered.toLocaleString()}\n                                                </p>\n                                                <p className=\"country__label\">\n                                                   <span className=\"country__label-bold\">Total Cases:</span>\n                                                   {covidData.cases.total.toLocaleString()}\n                                                </p>\n                                                <p className=\"country__label\">\n                                                   <span className=\"country__label-bold\">New Deaths:</span>\n                                                   {\n                                                      covidData.deaths.new != null\n                                                         ? covidData.deaths.new.toLocaleString()\n                                                         : 'No reported new deaths.'\n                                                   }\n                                                </p>\n                                                <p className=\"country__label\">\n                                                   <span className=\"country__label-bold\">Total Deaths:</span>\n                                                   {\n                                                      covidData.deaths.total != null\n                                                         ? covidData.deaths.total.toLocaleString()\n                                                         : 'No reported total deaths.'\n                                                   }\n                                                </p>\n                                             </div>\n                                          )\n                                       })\n                                    }\n                                 </div>\n                              )\n                        }\n                     </div>\n                  </section >\n               )\n            })\n         }\n         </section >\n   )\n}\n\nexport default CountryInfo\n\n\n// {\n//    covidData[0] === undefined\n//       ? <h1 className=\"covid-data__loading-text\" style={{ color: '#fff' }}>\n//          Loading Covid Data...\n//          </h1>\n//       : \n// }\n","import './styles/main.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport CountryInfo from './components/CountryInfo';\nimport { ThemeProvider } from './context/ThemeContext';\n\nfunction App() {\n   return (\n      <Router basename={process.env.PUBLIC_URL}>\n         <ThemeProvider>\n            <div className=\"app\">\n               <Header />\n               <Route exact path=\"/\" component={Main} />\n               <Route exact path=\"/:country\" component={CountryInfo} />\n            </div>\n         </ThemeProvider>\n      </Router>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}